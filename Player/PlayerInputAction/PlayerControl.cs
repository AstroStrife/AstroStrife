//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Script/Player/PlayerInputAction/PlayerControl.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControl: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControl()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControl"",
    ""maps"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""id"": ""0b4816be-047b-40b1-a9e3-8728e571df37"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""43b830b5-c780-4797-8ee7-49e3f567efd6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseDetection"",
                    ""type"": ""Value"",
                    ""id"": ""fe533af0-4426-4617-acb3-098e104fac0b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""03812d0b-ad20-4eaa-aa10-9f022a801e90"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CamLock"",
                    ""type"": ""Button"",
                    ""id"": ""e9b66b20-d85a-4552-9882-1a8eb1acb37a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DefaultAttack"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f06fc00f-92e2-47ae-9c44-1332b59a0187"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c9693c1d-4cce-4290-ba04-807e30fcee44"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cheat"",
                    ""type"": ""Button"",
                    ""id"": ""bfa162f9-909f-4b53-a568-8026ee001ee0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spectate"",
                    ""type"": ""Button"",
                    ""id"": ""d24674bd-8c56-4eb7-bd8c-2e2194739656"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ItemUse"",
                    ""type"": ""Value"",
                    ""id"": ""0ced2bc7-fecd-44bd-b0eb-ee700b42f3d0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SkillUseQ"",
                    ""type"": ""Button"",
                    ""id"": ""aa311061-9fb1-46a0-bc1f-8cc34a7e962e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillUseShift"",
                    ""type"": ""Button"",
                    ""id"": ""145a224d-56f8-44a5-8686-6ad90cdce556"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillUseE"",
                    ""type"": ""Button"",
                    ""id"": ""4dbe0ced-16f3-4c85-b927-1baec754d7e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillUseR"",
                    ""type"": ""Button"",
                    ""id"": ""faad5a10-3a17-4e19-aec3-1fa8dab79037"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""357b0c00-608f-44d2-9983-cb76b01e2a55"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d5e7d9b1-1eeb-4fb1-b734-422cc346826b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1e436571-a968-4a6e-8056-9181c90a2461"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""62f512b9-c873-4001-83a1-db08452b40e4"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d9e4a790-80eb-4264-bf4a-9cb36b282524"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""820a71a6-5a35-4b9f-8f8e-db098ee16b1e"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseDetection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be359ee0-0b09-4230-b735-4cb9f2d4f55a"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4718af8e-7006-4f59-a650-6076b27e7681"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CamLock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""95d0370a-c1bf-44a4-96ef-8577c238751f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DefaultAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df5cf399-d017-4a06-9b2c-d54671618c57"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fde9ee70-3739-4f64-be07-d9bb8df031d5"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cheat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c541083-d59e-4b7e-aebf-e5161b2b30a1"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": ""Scale"",
                    ""groups"": """",
                    ""action"": ""ItemUse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""91166979-7858-4e18-a7ea-806d73215e45"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=2)"",
                    ""groups"": """",
                    ""action"": ""ItemUse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3cc5bbf-b7f8-4031-b779-42642929275c"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=3)"",
                    ""groups"": """",
                    ""action"": ""ItemUse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f43bd86-d09b-48f8-8510-d3e956414fc6"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=4)"",
                    ""groups"": """",
                    ""action"": ""ItemUse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b087f54a-5b0c-4381-b1d1-dd2a446ae652"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=5)"",
                    ""groups"": """",
                    ""action"": ""ItemUse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be285712-21b1-45ee-8fdd-bb0736115b34"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=6)"",
                    ""groups"": """",
                    ""action"": ""ItemUse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b340a999-db52-4b29-80ad-1eb12a80a7b7"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillUseQ"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b88a7d6-e5d4-49b4-8c77-c5c33a0e373f"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillUseShift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b1b5ce96-85f1-4b97-927e-6f2423732527"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillUseE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4276de41-23d1-492c-88ec-6adfcc762692"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillUseR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f04aa10a-c657-4e2d-a055-594f88e5af9b"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spectate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Keyboard&Mouse
        m_KeyboardMouse = asset.FindActionMap("Keyboard&Mouse", throwIfNotFound: true);
        m_KeyboardMouse_Movement = m_KeyboardMouse.FindAction("Movement", throwIfNotFound: true);
        m_KeyboardMouse_MouseDetection = m_KeyboardMouse.FindAction("MouseDetection", throwIfNotFound: true);
        m_KeyboardMouse_Zoom = m_KeyboardMouse.FindAction("Zoom", throwIfNotFound: true);
        m_KeyboardMouse_CamLock = m_KeyboardMouse.FindAction("CamLock", throwIfNotFound: true);
        m_KeyboardMouse_DefaultAttack = m_KeyboardMouse.FindAction("DefaultAttack", throwIfNotFound: true);
        m_KeyboardMouse_Dash = m_KeyboardMouse.FindAction("Dash", throwIfNotFound: true);
        m_KeyboardMouse_Cheat = m_KeyboardMouse.FindAction("Cheat", throwIfNotFound: true);
        m_KeyboardMouse_Spectate = m_KeyboardMouse.FindAction("Spectate", throwIfNotFound: true);
        m_KeyboardMouse_ItemUse = m_KeyboardMouse.FindAction("ItemUse", throwIfNotFound: true);
        m_KeyboardMouse_SkillUseQ = m_KeyboardMouse.FindAction("SkillUseQ", throwIfNotFound: true);
        m_KeyboardMouse_SkillUseShift = m_KeyboardMouse.FindAction("SkillUseShift", throwIfNotFound: true);
        m_KeyboardMouse_SkillUseE = m_KeyboardMouse.FindAction("SkillUseE", throwIfNotFound: true);
        m_KeyboardMouse_SkillUseR = m_KeyboardMouse.FindAction("SkillUseR", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Keyboard&Mouse
    private readonly InputActionMap m_KeyboardMouse;
    private List<IKeyboardMouseActions> m_KeyboardMouseActionsCallbackInterfaces = new List<IKeyboardMouseActions>();
    private readonly InputAction m_KeyboardMouse_Movement;
    private readonly InputAction m_KeyboardMouse_MouseDetection;
    private readonly InputAction m_KeyboardMouse_Zoom;
    private readonly InputAction m_KeyboardMouse_CamLock;
    private readonly InputAction m_KeyboardMouse_DefaultAttack;
    private readonly InputAction m_KeyboardMouse_Dash;
    private readonly InputAction m_KeyboardMouse_Cheat;
    private readonly InputAction m_KeyboardMouse_Spectate;
    private readonly InputAction m_KeyboardMouse_ItemUse;
    private readonly InputAction m_KeyboardMouse_SkillUseQ;
    private readonly InputAction m_KeyboardMouse_SkillUseShift;
    private readonly InputAction m_KeyboardMouse_SkillUseE;
    private readonly InputAction m_KeyboardMouse_SkillUseR;
    public struct KeyboardMouseActions
    {
        private @PlayerControl m_Wrapper;
        public KeyboardMouseActions(@PlayerControl wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_KeyboardMouse_Movement;
        public InputAction @MouseDetection => m_Wrapper.m_KeyboardMouse_MouseDetection;
        public InputAction @Zoom => m_Wrapper.m_KeyboardMouse_Zoom;
        public InputAction @CamLock => m_Wrapper.m_KeyboardMouse_CamLock;
        public InputAction @DefaultAttack => m_Wrapper.m_KeyboardMouse_DefaultAttack;
        public InputAction @Dash => m_Wrapper.m_KeyboardMouse_Dash;
        public InputAction @Cheat => m_Wrapper.m_KeyboardMouse_Cheat;
        public InputAction @Spectate => m_Wrapper.m_KeyboardMouse_Spectate;
        public InputAction @ItemUse => m_Wrapper.m_KeyboardMouse_ItemUse;
        public InputAction @SkillUseQ => m_Wrapper.m_KeyboardMouse_SkillUseQ;
        public InputAction @SkillUseShift => m_Wrapper.m_KeyboardMouse_SkillUseShift;
        public InputAction @SkillUseE => m_Wrapper.m_KeyboardMouse_SkillUseE;
        public InputAction @SkillUseR => m_Wrapper.m_KeyboardMouse_SkillUseR;
        public InputActionMap Get() { return m_Wrapper.m_KeyboardMouse; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(KeyboardMouseActions set) { return set.Get(); }
        public void AddCallbacks(IKeyboardMouseActions instance)
        {
            if (instance == null || m_Wrapper.m_KeyboardMouseActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_KeyboardMouseActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @MouseDetection.started += instance.OnMouseDetection;
            @MouseDetection.performed += instance.OnMouseDetection;
            @MouseDetection.canceled += instance.OnMouseDetection;
            @Zoom.started += instance.OnZoom;
            @Zoom.performed += instance.OnZoom;
            @Zoom.canceled += instance.OnZoom;
            @CamLock.started += instance.OnCamLock;
            @CamLock.performed += instance.OnCamLock;
            @CamLock.canceled += instance.OnCamLock;
            @DefaultAttack.started += instance.OnDefaultAttack;
            @DefaultAttack.performed += instance.OnDefaultAttack;
            @DefaultAttack.canceled += instance.OnDefaultAttack;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @Cheat.started += instance.OnCheat;
            @Cheat.performed += instance.OnCheat;
            @Cheat.canceled += instance.OnCheat;
            @Spectate.started += instance.OnSpectate;
            @Spectate.performed += instance.OnSpectate;
            @Spectate.canceled += instance.OnSpectate;
            @ItemUse.started += instance.OnItemUse;
            @ItemUse.performed += instance.OnItemUse;
            @ItemUse.canceled += instance.OnItemUse;
            @SkillUseQ.started += instance.OnSkillUseQ;
            @SkillUseQ.performed += instance.OnSkillUseQ;
            @SkillUseQ.canceled += instance.OnSkillUseQ;
            @SkillUseShift.started += instance.OnSkillUseShift;
            @SkillUseShift.performed += instance.OnSkillUseShift;
            @SkillUseShift.canceled += instance.OnSkillUseShift;
            @SkillUseE.started += instance.OnSkillUseE;
            @SkillUseE.performed += instance.OnSkillUseE;
            @SkillUseE.canceled += instance.OnSkillUseE;
            @SkillUseR.started += instance.OnSkillUseR;
            @SkillUseR.performed += instance.OnSkillUseR;
            @SkillUseR.canceled += instance.OnSkillUseR;
        }

        private void UnregisterCallbacks(IKeyboardMouseActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @MouseDetection.started -= instance.OnMouseDetection;
            @MouseDetection.performed -= instance.OnMouseDetection;
            @MouseDetection.canceled -= instance.OnMouseDetection;
            @Zoom.started -= instance.OnZoom;
            @Zoom.performed -= instance.OnZoom;
            @Zoom.canceled -= instance.OnZoom;
            @CamLock.started -= instance.OnCamLock;
            @CamLock.performed -= instance.OnCamLock;
            @CamLock.canceled -= instance.OnCamLock;
            @DefaultAttack.started -= instance.OnDefaultAttack;
            @DefaultAttack.performed -= instance.OnDefaultAttack;
            @DefaultAttack.canceled -= instance.OnDefaultAttack;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @Cheat.started -= instance.OnCheat;
            @Cheat.performed -= instance.OnCheat;
            @Cheat.canceled -= instance.OnCheat;
            @Spectate.started -= instance.OnSpectate;
            @Spectate.performed -= instance.OnSpectate;
            @Spectate.canceled -= instance.OnSpectate;
            @ItemUse.started -= instance.OnItemUse;
            @ItemUse.performed -= instance.OnItemUse;
            @ItemUse.canceled -= instance.OnItemUse;
            @SkillUseQ.started -= instance.OnSkillUseQ;
            @SkillUseQ.performed -= instance.OnSkillUseQ;
            @SkillUseQ.canceled -= instance.OnSkillUseQ;
            @SkillUseShift.started -= instance.OnSkillUseShift;
            @SkillUseShift.performed -= instance.OnSkillUseShift;
            @SkillUseShift.canceled -= instance.OnSkillUseShift;
            @SkillUseE.started -= instance.OnSkillUseE;
            @SkillUseE.performed -= instance.OnSkillUseE;
            @SkillUseE.canceled -= instance.OnSkillUseE;
            @SkillUseR.started -= instance.OnSkillUseR;
            @SkillUseR.performed -= instance.OnSkillUseR;
            @SkillUseR.canceled -= instance.OnSkillUseR;
        }

        public void RemoveCallbacks(IKeyboardMouseActions instance)
        {
            if (m_Wrapper.m_KeyboardMouseActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IKeyboardMouseActions instance)
        {
            foreach (var item in m_Wrapper.m_KeyboardMouseActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_KeyboardMouseActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public KeyboardMouseActions @KeyboardMouse => new KeyboardMouseActions(this);
    public interface IKeyboardMouseActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnMouseDetection(InputAction.CallbackContext context);
        void OnZoom(InputAction.CallbackContext context);
        void OnCamLock(InputAction.CallbackContext context);
        void OnDefaultAttack(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnCheat(InputAction.CallbackContext context);
        void OnSpectate(InputAction.CallbackContext context);
        void OnItemUse(InputAction.CallbackContext context);
        void OnSkillUseQ(InputAction.CallbackContext context);
        void OnSkillUseShift(InputAction.CallbackContext context);
        void OnSkillUseE(InputAction.CallbackContext context);
        void OnSkillUseR(InputAction.CallbackContext context);
    }
}
